{"mappings":"AAAA,MAAM,IAAI;IACT,YAAY,MAAM,EAAE,OAAO,CAAE;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,CAAC,0CAA0C;QACvD,sBAAsB;QACrB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAM;YACzB,OAAO,CAAC,iDAAiD,CAAC,CAAC;YAC3D,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SACjB,CAAC;QACH,qBAAqB;QACpB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAM;YACxB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,WAAW,CAAC,IAAM;gBACjB,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;oBACjD,OAAO,CAAC,sCAAsC,CAAC,CAAC;oBAChD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;iBAChB;gBACD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAC/C,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC;gBAEnC,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;oBAClD,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;oBAC1D,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;iBAChB;aACD,EAAE,IAAI,CAAC,CAAC;SACT;KACF;IACD,KAAK,GAAG;QACP,IAAI,MAAM,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,AAAC;QACrE,IAAI,MAAM,IAAI,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE;YACnC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,SAAS,GAAG,CAAC,kYAUnC,CAAC,CAAC;YACjB,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAM;gBAClE,IAAI,IAAI,GAAG;oBACV,IAAI,EAAE,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,OAAO,GAAE,QAAQ,GAAG,OAAO;oBACjE,EAAE,EAAE,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,KAAK;oBACvC,EAAE,EAAE,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,KAAK;iBACvC;gBACD,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,EACjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAEjB,CAAC,CAAC;SACH,MAEA,IAAI,CAAC,IAAI,CAAC;YAAC,IAAI,EAAE,OAAO;YAAE,EAAE,EAAE,MAAM;SAAC,CAAC,CAAC;KAExC;IACD,IAAI,CAAC,IAAI,EAAE;QACV,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KACpC;CACD","sources":["conn.js"],"sourcesContent":["class Conn {\r\n\tconstructor(wsAddr, errorCB) {\r\n\t\tthis.conn = new WebSocket(wsAddr);\r\n\t\tthis.status; //? -1 failed, 0 disconnected, 1 connected\r\n\t\t//* server never found\r\n\t\t\tthis.conn.onerror = () => {\r\n\t\t\t\terrorCB('Errore, server non trovato, aggiorna la pagina.');\r\n\t\t\t\tthis.status = -1;\r\n\t\t\t};\r\n\t\t//* opened connection\r\n\t\t\tthis.conn.onopen = () => {\r\n\t\t\t\tthis.status = 1;\r\n\t\t\t\tthis.login();\r\n\t\t\t\tsetInterval(() => { //? connection handling\r\n\t\t\t\t\tif (this.conn.readyState > 1 && this.status == 1) { //? disconnected\r\n\t\t\t\t\t\terrorCB('Errore, server disconnesso, attendi.');\r\n\t\t\t\t\t\tthis.status = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.conn.readyState > 1 && this.status == 0) { //? try to reconnect\r\n\t\t\t\t\t\tthis.conn = new WebSocket(wsAddr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.conn.readyState == 1 && this.status == 0) { //? managed to reconnect\r\n\t\t\t\t\t\tdocument.getElementById('overlay').style.display = 'none';\r\n\t\t\t\t\t\tthis.status = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t}\r\n\tlogin() {\r\n\t\tlet userID = new URLSearchParams(window.location.search).get('user');\r\n\t\tif (userID == '' || userID == null) { //? unlogged\r\n\t\t\tdocument.getElementById('main-page').innerHTML = `<fieldset id=\"form\">\r\n\t\t\t\t\t\t\t\t<legend>ACCEDI</legend>\r\n\t\t\t\t\t\t\t\t<label for=\"un\">Username</label>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" id=\"un\">\r\n\t\t\t\t\t\t\t\t<label for=\"pw\">Password</label>\r\n\t\t\t\t\t\t\t\t<input type=\"password\" id=\"pw\">\r\n\t\t\t\t\t\t\t\t<label for=\"sign\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"sign\">Primo accesso\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<button id=\"confirm\">Conferma</button>\r\n\t\t\t\t\t\t\t</fieldset>`;\r\n\t\t\tdocument.getElementById('confirm').addEventListener('click', () => {\r\n\t\t\t\tlet form = {\r\n\t\t\t\t\ttype: document.getElementById('sign').checked? 'signin' : 'login',\r\n\t\t\t\t\tun: document.getElementById('un').value,\r\n\t\t\t\t\tpw: document.getElementById('pw').value\r\n\t\t\t\t}\r\n\t\t\t\tif (form.un != '' && form.pw != '') {\r\n\t\t\t\t\tthis.send(form);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.send({type: 'login', id: userID});\r\n\t\t}\r\n\t}\r\n\tsend(json) {\r\n\t\tthis.conn.send(JSON.stringify(json))\r\n\t}\r\n}"],"names":[],"version":3,"file":"index.c168a03b.js.map","sourceRoot":"/__parcel_source_root/"}